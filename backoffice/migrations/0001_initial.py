# Generated by Django 3.1.7 on 2021-02-24 14:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Buying',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Achat',
                'verbose_name_plural': 'Achats',
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Nom du plat')),
            ],
            options={
                'verbose_name': 'Plat',
                'verbose_name_plural': 'Plats',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_number', models.IntegerField(blank=True, verbose_name='Numéro de la table')),
                ('total_price', models.IntegerField(verbose_name='Montant')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date de la facture')),
                ('paymaster', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoices', to=settings.AUTH_USER_MODEL, verbose_name='Caissier')),
            ],
            options={
                'verbose_name': 'Facture',
                'verbose_name_plural': 'Factures',
            },
        ),
        migrations.CreateModel(
            name='PartitionFormulla',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cooking_type', models.CharField(max_length=100, verbose_name='Type de préparation')),
                ('input', models.IntegerField(default=1, verbose_name='Quantité en kg ou litre')),
                ('output', models.IntegerField(verbose_name='Nombre de portions ou consos pour 1 kg ou litre')),
            ],
            options={
                'verbose_name': 'Formule de partition',
                'verbose_name_plural': 'Formules de partition',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nom de la salle')),
            ],
            options={
                'verbose_name': 'Salle',
                'verbose_name_plural': 'Salles',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nom du produit')),
                ('category', models.CharField(choices=[('P', 'Portionable'), ('UP', 'Non Portionable')], default='P', max_length=2, verbose_name='Catergorie du produit')),
                ('partition', models.ManyToManyField(help_text='Appuyez sur Shift pour selectionner plusieurs', to='backoffice.PartitionFormulla', verbose_name="Types de préparation qu'on peut faire avec ce produit")),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dish_prices', to='backoffice.dish')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='room_prices', to='backoffice.room')),
            ],
            options={
                'verbose_name': 'Prix',
                'verbose_name_plural': 'Prix',
            },
        ),
        migrations.CreateModel(
            name='Portion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store', models.IntegerField(default=0)),
                ('partition', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backoffice.partitionformulla')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Quantité achetée')),
                ('price', models.IntegerField()),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoices', to='backoffice.invoice')),
                ('plat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoices_plat', to='backoffice.dish')),
            ],
        ),
        migrations.AddField(
            model_name='dish',
            name='portion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='dishs', to='backoffice.portion'),
        ),
        migrations.CreateModel(
            name='BuyingEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('buying', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backoffice.buying')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.product')),
            ],
        ),
    ]
